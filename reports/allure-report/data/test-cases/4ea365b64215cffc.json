{"uid":"4ea365b64215cffc","name":"test_inquiry_appears_on_all_portals","fullName":"testcases.e2e.test_inquiry_flow#test_inquiry_appears_on_all_portals","historyId":"5f0d9de07cdc258e88ec17fe2a253b83","time":{"start":1760454035420,"stop":1760454103792,"duration":68372},"description":"\n    LEARNER : Send and Verify Inquiry msg\n    ","descriptionHtml":"<pre><code>LEARNER : Send and Verify Inquiry msg\n</code></pre>\n","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Learners\").first","statusTrace":"page = <Page url='https://beta-tp.findyourcourses.org/portal/dashboard'>, login = <function login.<locals>._login_and_verify_dashboard at 0x000001F40C7E8F40>\n\n    @pytest.mark.e2e\n    async def test_inquiry_appears_on_all_portals(page,login):\n        '''\n        LEARNER : Send and Verify Inquiry msg\n        '''\n        #Login\n        await login(page,\"learner\")\n        #get learner name\n        home_page = DashboardPage(page)\n        learner_name=await home_page.get_learner_name()\n        # Navigate to home pg\n        await home_page.navigate_to_home_page()\n        await page.get_by_role(\"button\", name=\"Browse Courses\").click()\n        # Open any course\n        course_listing = CourseListing(page)\n        course_card = await course_listing.get_random_course_card()\n        await course_card.click()\n    \n        #get TP name\n        course_detail = CourseDetailPage(page)\n        tp_name=await course_detail.get_tp_name()\n        # Open inquiry popup\n        await course_detail.open_inquiry_popup()\n    \n        # Fill Inquiry form\n        inquiry_msg_sent = await course_detail.fill_inquiry_form()\n        # Submit Inquiry form\n        await course_detail.submit_inquiry_form()\n        # Navigate to dashboard\n        base_page = BasePage(page)\n        await base_page.click_on_profile_icon()\n        logger.info(\"\\n--------Verifying Inquiry in table---------\\n\")\n        #Navigate to My Courses\n        dashboard = DashboardPage(page)\n        await dashboard.navigate_to_my_courses()\n        #Navigate to Inquired Courses\n        await page.get_by_text(\"Inquired Courses\").click()\n        # Get recent inquiry msg\n        found_inquiry,row_data=await check_element_in_table(page, inquiry_msg_sent, 5, \"Inquired Courses\")\n        assert found_inquiry, f\"Inquiry {found_inquiry} should be in 'Inquired Courses' but was not found\"\n    \n        '''\n        TP : Verify Recent Inquiry msg\n        '''\n        await login_by_name_or_email(page,\"trainer\",tp_name)\n        #navigate to learner\n        tp_menu=TPDashboardPage(page)\n>       await tp_menu.navigate_to_learner()\n\ntestcases\\e2e\\test_inquiry_flow.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\base\\side_menu.py:21: in navigate_to_learner\n    await self.page.get_by_role(\"button\", name=\"Learners\").first.click()\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\async_api\\_generated.py:15459: in click\n    await self._impl_obj.click(\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py:521: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001F40C7B7BC0>, cb = <function Channel.send.<locals>.<lambda> at 0x000001F40C7EAB60>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"Learners\").first\n\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1760453330582,"stop":1760453330582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"event_loop_policy","time":{"start":1760453330582,"stop":1760453330582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_verify_url","time":{"start":1760453330582,"stop":1760453330582,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"page","time":{"start":1760454033559,"stop":1760454035420,"duration":1861},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_function_scoped_runner","time":{"start":1760454033559,"stop":1760454033560,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"login","time":{"start":1760454035420,"stop":1760454035420,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"set_global_timeouts","time":{"start":1760454035420,"stop":1760454035420,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"\n    LEARNER : Send and Verify Inquiry msg\n    ","status":"broken","statusMessage":"playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"button\", name=\"Learners\").first","statusTrace":"page = <Page url='https://beta-tp.findyourcourses.org/portal/dashboard'>, login = <function login.<locals>._login_and_verify_dashboard at 0x000001F40C7E8F40>\n\n    @pytest.mark.e2e\n    async def test_inquiry_appears_on_all_portals(page,login):\n        '''\n        LEARNER : Send and Verify Inquiry msg\n        '''\n        #Login\n        await login(page,\"learner\")\n        #get learner name\n        home_page = DashboardPage(page)\n        learner_name=await home_page.get_learner_name()\n        # Navigate to home pg\n        await home_page.navigate_to_home_page()\n        await page.get_by_role(\"button\", name=\"Browse Courses\").click()\n        # Open any course\n        course_listing = CourseListing(page)\n        course_card = await course_listing.get_random_course_card()\n        await course_card.click()\n    \n        #get TP name\n        course_detail = CourseDetailPage(page)\n        tp_name=await course_detail.get_tp_name()\n        # Open inquiry popup\n        await course_detail.open_inquiry_popup()\n    \n        # Fill Inquiry form\n        inquiry_msg_sent = await course_detail.fill_inquiry_form()\n        # Submit Inquiry form\n        await course_detail.submit_inquiry_form()\n        # Navigate to dashboard\n        base_page = BasePage(page)\n        await base_page.click_on_profile_icon()\n        logger.info(\"\\n--------Verifying Inquiry in table---------\\n\")\n        #Navigate to My Courses\n        dashboard = DashboardPage(page)\n        await dashboard.navigate_to_my_courses()\n        #Navigate to Inquired Courses\n        await page.get_by_text(\"Inquired Courses\").click()\n        # Get recent inquiry msg\n        found_inquiry,row_data=await check_element_in_table(page, inquiry_msg_sent, 5, \"Inquired Courses\")\n        assert found_inquiry, f\"Inquiry {found_inquiry} should be in 'Inquired Courses' but was not found\"\n    \n        '''\n        TP : Verify Recent Inquiry msg\n        '''\n        await login_by_name_or_email(page,\"trainer\",tp_name)\n        #navigate to learner\n        tp_menu=TPDashboardPage(page)\n>       await tp_menu.navigate_to_learner()\n\ntestcases\\e2e\\test_inquiry_flow.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\base\\side_menu.py:21: in navigate_to_learner\n    await self.page.get_by_role(\"button\", name=\"Learners\").first.click()\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\async_api\\_generated.py:15459: in click\n    await self._impl_obj.click(\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_frame.py:521: in click\n    await self._channel.send(\"click\", self._timeout, locals_to_params(locals()))\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001F40C7B7BC0>, cb = <function Channel.send.<locals>.<lambda> at 0x000001F40C7EAB60>\nis_internal = False, title = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 30000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"button\", name=\"Learners\").first\n\nC:\\Users\\dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TimeoutError","steps":[],"attachments":[{"uid":"bed9d08419f47004","name":"log","source":"bed9d08419f47004.txt","type":"text/plain","size":799}],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true},"afterStages":[{"name":"page::finalizer","time":{"start":1760454104140,"stop":1760454104665,"duration":525},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"set_global_timeouts::0","time":{"start":1760454104140,"stop":1760454104140,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_function_scoped_runner::0","time":{"start":1760454104665,"stop":1760454104680,"duration":15},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentStep":false,"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"e2e"},{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"testcases.e2e"},{"name":"suite","value":"test_inquiry_flow"},{"name":"host","value":"DESKTOP-B719PVK"},{"name":"thread","value":"18108-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.e2e.test_inquiry_flow"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":["asyncio","e2e"]},"source":"4ea365b64215cffc.json","parameterValues":[]}