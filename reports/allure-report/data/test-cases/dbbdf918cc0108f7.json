{"uid":"dbbdf918cc0108f7","name":"test_learner_status_count","fullName":"testcases.admin.learner.test_admin_learner#test_learner_status_count","historyId":"b13ca7ee924a3c1811f00d9db2ae44c9","time":{"start":1760684627927,"stop":1760684645060,"duration":17133},"description":"\n    Test that Learners status count is correct\n    ","descriptionHtml":"<pre><code>Test that Learners status count is correct\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: <Locator frame=<Frame name= url='https://beta-admin.findyourcourses.org/portal/learners'> selector='internal:role=button[name=\"All Learners\"i]'> Count 122 != Total Rows in Table 121\nassert 122 == 121","statusTrace":"page = <Page url='https://beta-admin.findyourcourses.org/portal/learners'>\nlogin = <function login.<locals>._login_and_verify_dashboard at 0x00000208DF316200>\n\n    async def test_learner_status_count(page,login):\n        '''\n        Test that Learners status count is correct\n        '''\n        await login(page,\"admin\")\n        #Navigate to Learners\n        await page.get_by_text(\"Learners\").click()\n        statuses=[\"All Learners\",\"Activated\",\"De Activated\"]\n        for status in statuses:\n            #get button Count\n            logger.info(f\"\\n-----Verifying Status: {status}------\\n\")\n            status=page.get_by_role(\"button\",name=status)\n            button_count=await get_count(status)\n            #Count rows in all pages\n            total_rows=await count_rows_in_all_pages(page)\n            #Verify button Count with actual no of rows present in table\n>           assert button_count==total_rows, (\n                f\"{status} Count {button_count} != Total Rows in Table {total_rows}\"\n            )\nE           AssertionError: <Locator frame=<Frame name= url='https://beta-admin.findyourcourses.org/portal/learners'> selector='internal:role=button[name=\"All Learners\"i]'> Count 122 != Total Rows in Table 121\nE           assert 122 == 121\n\ntestcases\\admin\\learner\\test_admin_learner.py:20: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1760684440451,"stop":1760684440451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"pytestconfig","time":{"start":1760684440451,"stop":1760684440451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"delete_output_dir","time":{"start":1760684440451,"stop":1760684440451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"event_loop_policy","time":{"start":1760684440451,"stop":1760684440451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_verify_url","time":{"start":1760684440451,"stop":1760684440451,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"page","time":{"start":1760684625868,"stop":1760684627926,"duration":2058},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_function_event_loop","time":{"start":1760684625868,"stop":1760684625869,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"set_global_timeouts","time":{"start":1760684627926,"stop":1760684627926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"login","time":{"start":1760684627926,"stop":1760684627926,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"description":"\n    Test that Learners status count is correct\n    ","status":"failed","statusMessage":"AssertionError: <Locator frame=<Frame name= url='https://beta-admin.findyourcourses.org/portal/learners'> selector='internal:role=button[name=\"All Learners\"i]'> Count 122 != Total Rows in Table 121\nassert 122 == 121","statusTrace":"page = <Page url='https://beta-admin.findyourcourses.org/portal/learners'>\nlogin = <function login.<locals>._login_and_verify_dashboard at 0x00000208DF316200>\n\n    async def test_learner_status_count(page,login):\n        '''\n        Test that Learners status count is correct\n        '''\n        await login(page,\"admin\")\n        #Navigate to Learners\n        await page.get_by_text(\"Learners\").click()\n        statuses=[\"All Learners\",\"Activated\",\"De Activated\"]\n        for status in statuses:\n            #get button Count\n            logger.info(f\"\\n-----Verifying Status: {status}------\\n\")\n            status=page.get_by_role(\"button\",name=status)\n            button_count=await get_count(status)\n            #Count rows in all pages\n            total_rows=await count_rows_in_all_pages(page)\n            #Verify button Count with actual no of rows present in table\n>           assert button_count==total_rows, (\n                f\"{status} Count {button_count} != Total Rows in Table {total_rows}\"\n            )\nE           AssertionError: <Locator frame=<Frame name= url='https://beta-admin.findyourcourses.org/portal/learners'> selector='internal:role=button[name=\"All Learners\"i]'> Count 122 != Total Rows in Table 121\nE           assert 122 == 121\n\ntestcases\\admin\\learner\\test_admin_learner.py:20: AssertionError","steps":[],"attachments":[{"uid":"c53827f83efef8a2","name":"log","source":"c53827f83efef8a2.txt","type":"text/plain","size":835}],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"set_global_timeouts::0","time":{"start":1760684645082,"stop":1760684645082,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"page::finalizer","time":{"start":1760684645090,"stop":1760684645603,"duration":513},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"_function_event_loop::0","time":{"start":1760684645604,"stop":1760684645605,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentStep":false,"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"testcases.admin.learner"},{"name":"suite","value":"test_admin_learner"},{"name":"host","value":"DESKTOP-B719PVK"},{"name":"thread","value":"10844-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.admin.learner.test_admin_learner"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"bd8aa63c0b95d8ed","status":"failed","statusDetails":"AssertionError: <Locator frame=<Frame name= url='https://beta-admin.findyourcourses.org/portal/learners'> selector='internal:role=button[name=\"All Learners\"i]'> Count 122 != Total Rows in Table 121\nassert 122 == 121","time":{"start":1760684607559,"stop":1760684625298,"duration":17739}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":["asyncio"]},"source":"dbbdf918cc0108f7.json","parameterValues":[]}